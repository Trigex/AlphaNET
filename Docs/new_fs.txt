AlphaFS Filesystem Schema Version 2

TODO: Clean this up, and throw everything into FILESYSTEM.md

Notes:
All "Size" properties are assumed to be in bytes

Block size is a constant 4096 bytes (4kb)

Handy Formulas:
The Inodes per bytes ratio is 1 INode per 16 kb, which can be expressed as FilesystemFileSize / 16384
(I.E, on a 3 gb filesystem file, 3221225472 / 16384 = 196608 inodes)

Total Block count is the entire Filesystem, divided into blocks, which can be expressed as FilesystemFileSize / Block Size 
(I.E, on a 3 gb filesystem file with default block size, 3221225472 / 4096 = 786432 blocks)

Inodes, being 132 bytes, mean a single 4kb block can hold about 31 inodes (and just a bit more space left over), the total count of blocks taken up by the Inode table can be expressed as BlockCount (InodeCount / InodesPerBlock)
(I.E, 786432 / (196608 / 31) = 124 blocks used by Inode table)

An Inode's parent inode-table number can be found with (InodeNumber / InodesPerBlock) + 1
(I.E, (42 / 31) + 1 = 2, INode number 42 is stored in inode-table block 2)

An Inode's inode-table index can be found within the table block that holds it with InodeNumber - (InodesPerBlock * (Inode Table Block Index - 1))
(I.E, 42 - (31 * (2 - 1)) = 11, Inode 42 can be found in inode-table block 2 at index 11 )

Terminology:
SuperBlock - The first 

INode - A statically allocated 132 byte object, stored in the INode Table, which describes a given file's properties, and location by which it can be accessed

Creation:
When a .fs file is created, it first fills the file with zeroes, the quantity being of the FilesystemFileSize. It then sets up the superblock, and then allocates INodeCount number of INodes in the INode table. These INodes all have their properties set to 0.
Then, a root directory INode is created (as INode number 1). The INode's data block pointer value is then determined (for root, the location would be SuperBlockSize + (INodeSize * INodeCount) + 1) . In the data block, the parent file INode number is set to 1, and the relative INode number is set to 1.

Filesystem Objects
---------------------------------------------

INode Object (132 bytes in length)
==============================================================
Number (uint) - The INode's identifying number
BlockCount (uint) - The total number of unique blocks allocated for this INode
TotalSize (uint) - The total size of all allocated block's added together
(The following are all ulong sized pointers to data blocks)
DirectDataBlockPointer1 (ulong)
DirectDataBlockPointer2 (ulong)
DirectDataBlockPointer3 (ulong)
DirectDataBlockPointer4 (ulong)
DirectDataBlockPointer5 (ulong)
DirectDataBlockPointer6 (ulong)
DirectDataBlockPointer7 (ulong)
DirectDataBlockPointer8 (ulong)
DirectDataBlockPointer9 (ulong)
DirectDataBlockPointer10 (ulong)
DirectDataBlockPointer11 (ulong)
DirectDataBlockPointer12 (ulong)
DirectDataBlockPointer13 (ulong)
PointerBlockPointer (ulong) - Points to the position of a single Pointer Block object
DoubleIndirectPointerBlockPointer (ulong) - Points to the position of a Pointer Block Object, which themselves point to the position of pointer block object

Pointer Block Object (4096 bytes in length, an entire block)
==============================================================
(512 unique entries) DataBlockPointer (ulong) - Points to the position in the .fs file of the start of a datablock

Directory Object (Stored in a data block) (Dynamic size)
==============================================================
CurrentDirectory (ulong) - A reference to the current directory, who's value contains the current directory's inode number
ParentDirectory (ulong) - A reference to the parent directory, who's value contains the current directory's parent directory's inode number
Entries (uint) - The count of how many file entries (not including Current and Parent Directory entries) are in this list
Files (File Table Object) - Where all the files (that could fit in this block) are stored
If not all the directory's files could be fit within this block, an extended list can be found in the directory inode's other data block pointers, those blocks containing only File Table objects


File Table Object (Stored in a data block, or a directory object) (Dynamic Size)
==============================================================
File Object:
    Title (utf-8 string, padded to 128 bytes with NUL, if the string is shorter than 128 bytes) - The title of this file, 128 character limit
	InodeNumber (uint) - The Number of the Inode that represents this file

Filesystem File Structure
---------------------------------------------

Superblock (First section of file) (37 bytes in length)
==============================================================
FsVersion (byte)
FilesystemFileSize (ulong)
BlockSize (ushort)
INodeSize (ushort)
INodeCount (uint)
BlockCount (uint)
FreeINodeCount (uint)
FreeBlockCount (uint)
INodeTablePointer (ulong)
==============================================================


